.\" Copyright IBM Corp. 2015
.\"
.\" The MIT License (MIT)
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining a copy
.\" of this software and associated documentation files (the "Software"), to
.\" deal in the Software without restriction, including without limitation the
.\" rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
.\" sell copies of the Software, and to permit persons to whom the Software is
.\" furnished to do so, subject to the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be included in
.\" all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
.\" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
.\" IN THE SOFTWARE.
.\"
.\" Contributors:
.\"     IBM Corporation, Adhemerval Zanella - Initial implementation.
.\"     IBM Corporation, Rajalakshmi S - Initial implementation.
.TH LIBPAF 2015-08-06 "Linux" "Program Priority Register"
.SH NAME
The Power Architecture Facilities - Program Priority Register
.SH SYNOPSIS
.sp
.B #include <paf/ppr.h>
.sp
.B void paf_yield(void);
.sp
.B void paf_mdoio(void);
.sp
.B void paf_mdoom(void);
.sp
.B void paf_ppr_very_low(void);
.sp
.B void paf_ppr_low(void);
.sp
.B void paf_ppr_med_low(void);
.sp
.B void paf_ppr_med(void);
.sp
.B void paf_ppr_med_high(void);
.sp

.SH DESCRIPTION

The Program Priority Register header
.I ppr.h
provides a mechanism to adjust the
thread priorities based on lock acquisition, wait and release
available on Power Architecture.

.PP
The function
.BR paf_yield ()
provides a hint that performance will probably be improved if shared resources
dedicated to the executing processor are released for use by other processors.

.PP
The function
.BR paf_mdoio ()
provides a hint that performance will probably be improved if shared resources
dedicated to the executing processor are released until all outstanding storage
accesses to caching-inhibited storage have been completed.

.PP
The function
.BR paf_mdoom ()
provides a hint that performance will probably be improved if shared resources
dedicated to the executing processor are released until all outstanding storage
accesses to cacheable storage for which the data is not in the cache have been completed.

.PP
The function
.BR paf_ppr_very_low ()
sets the Program Priority Register to very low value.
This is available from Power ISA 2.07.

.PP
The function
.BR paf_ppr_low ()
sets the Program Priority Register to low value.

.PP
The function
.BR paf_ppr_med_low ()
sets the Program Priority Register to medium low value.

.PP
The function
.BR paf_ppr_med ()
sets the Program Priority Register to medium value (default).

.PP
The function
.BR paf_ppr_med_high ()
sets the Program Priority Register to medium high value.
This is available from Power ISA 2.07.

.SH REFERENCES
.TP
.B Power ISA\(tm Version 2.05
.TP
.B Power ISA\(tm Version 2.06
.TP
.B Power ISA\(tm Version 2.06+
.TP
.B Power ISA\(tm Version 2.07

.SH REPORTING BUGS
.PP
Email bug reports to Rajalakshmi S  <raji@linux.vnet.ibm.com>.
.SH AUTHORS
This manual page was written by Rajalakshmi S  <raji@linux.vnet.ibm.com>
and Adhemerval Zanella  <azanella@linux.vnet.ibm.com>.


